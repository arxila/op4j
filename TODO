
 - Add "getSimpleName" to javaruntype types so that package can be omitted
 - Add "getUpperBounds/getUniqueUpperBound" + Lower to javaruntype "Types"

 - Maybe generic and asType would work as one and the same for these modified interfaces?
    
 - Check the usage of all Type parameters. Would they be fooled with something like Type<List<? extends Object>>?
 - When not in leaf nodes, things coming from a function (exec) should be copied to 
   ensure Lists and Arrays and such are the right implementation (TargetUtils.copy*)
 - Add, insert and put methods should normalize incoming objects to ensure they are the right List,
   Set or Map class.   
    
 - Create some sort of  "replace" method
 - Should the "add" of arrays have the same name as the "add" of generic operators? (they work on different dimensions!)
 - WARNING: Op.buildListOfList(Types.STRING).add(listOfString1).add(listOfString2).get()
